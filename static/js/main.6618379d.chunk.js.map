{"version":3,"sources":["redax/chat/chatTypes.js","redax/chat/chatReducer.js","redax/rootReducer.js","redax/store.js","components/Input/Input.jsx","components/Button/Button.jsx","App.jsx","redax/chat/chatAction.js","index.jsx"],"names":["ADD","REMOVE","INITIAL_STATE","messages","rootReducer","combineReducers","messag","state","action","type","data","filter","message","store","createStore","Input","className","value","onChange","Button","App","messagess","useSelector","dispatch","useDispatch","useState","setValue","deleteMessage","map","onClick","title","currentTime","id","onSubmit","event","preventDefault","Date","getHours","getMinutes","target","ReactDOM","render","document","getElementById"],"mappings":"gPAAaA,EAAM,aACNC,EAAS,gBCCTC,EAAgB,CAC3BC,SAAU,ICACC,EAAcC,YAAgB,CACzCC,ODEqB,WAAoC,IAAnCC,EAAkC,uDAA1BL,EAAeM,EAAW,uCACxD,OAAQA,EAAOC,MACb,KAAKT,EACH,MAAO,CACLG,SAAS,GAAD,mBACHI,EAAMJ,UADH,CAENK,EAAOE,QAIb,KAAKT,EACH,MAAO,CACLE,SAAUI,EAAMJ,SAASQ,QAAO,SAAAC,GAAO,OAAIA,IAAYJ,EAAOE,SAGlE,QACE,OAAOH,MEnBAM,EAAQC,YAAYV,G,QCApBW,G,MAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAArB,OACnB,uBACET,KAAK,OACLO,UAAWA,EACXC,MAAOA,EACPC,SAAUA,MCLDC,EAAS,SAAC,GAAD,IAAGH,EAAH,EAAGA,UAAH,OACpB,wBACEP,KAAK,SACLO,UAAWA,KCEFI,EAAM,WACjB,IAAMC,EAAYC,aAAY,SAAAf,GAAK,OAAIA,EAAMD,OAAOH,YAE9CoB,EAAWC,cAHM,EAIGC,mBAAS,IAJZ,mBAIhBR,EAJgB,KAITS,EAJS,KAMjBC,EAAgB,SAACf,GACrBW,ECRkC,CACpCd,KAAMR,EACNS,KDMyBE,KAqBzB,OACE,sBAAKI,UAAU,OAAf,UACE,qBAAKA,UAAU,iBAAf,SACGK,EAAUO,KAAI,SAAAhB,GAAO,OAEpB,cADA,CACA,OACEI,UAAU,gBAEVa,QAAS,kBAAMF,EAAcf,IAH/B,UAKGA,EAAQkB,MACT,sBAAMd,UAAU,aAAhB,SACGJ,EAAQmB,gBALNnB,EAAQoB,SAWnB,qBAAKhB,UAAU,mBAAf,SACE,uBACER,OAAO,GACPQ,UAAU,aACViB,SAxCc,SAACC,GChBC,IAAAxB,EDiBtBwB,EAAMC,iBAEFlB,IACFM,GCpBoBb,EDoBA,CAClBoB,MAAOb,EACPe,GAAI,OACJD,YAAY,GAAD,QAAK,IAAIK,MAAOC,WAAhB,aAA8B,IAAID,MAAOE,eCvBzB,CACjC7B,KAAMT,EACNU,UDwBIgB,EAAS,MA+BLT,MAAOA,EAJT,UAME,cAAC,EAAD,CACED,UAAU,cACVC,MAAOA,EACPC,SAhCO,SAAC,GAAgB,IAAdqB,EAAa,EAAbA,OAClBb,EAASa,EAAOtB,UAiCV,cAAC,EAAD,CACED,UAAU,0BE5DtBwB,IAASC,OACP,cAAC,IAAD,CAAU5B,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF6B,SAASC,eAAe,W","file":"static/js/main.6618379d.chunk.js","sourcesContent":["export const ADD = 'messageAdd';\nexport const REMOVE = 'messageRemove';\n","import { ADD, REMOVE } from './chatTypes';\n\nexport const INITIAL_STATE = {\n  messages: [],\n};\n\nexport const reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD:\n      return {\n        messages: [\n          ...state.messages,\n          action.data,\n        ],\n      };\n\n    case REMOVE:\n      return {\n        messages: state.messages.filter(message => message !== action.data),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer } from './chat/chatReducer';\n\nexport const rootReducer = combineReducers({\n  messag: reducer,\n});\n","import { createStore } from 'redux';\nimport { rootReducer } from './rootReducer';\n\nexport const store = createStore(rootReducer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({ className, value, onChange }) => (\n  <input\n    type=\"text\"\n    className={className}\n    value={value}\n    onChange={onChange}\n  />\n);\n\nInput.propTypes = {\n  className: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ className }) => (\n  <button\n    type=\"submit\"\n    className={className}\n  />\n);\n\nButton.propTypes = {\n  className: PropTypes.string.isRequired,\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input } from './components/Input';\nimport { Button } from './components/Button';\nimport { addMessage, removeMessage } from './redax/chat/chatAction';\n\nexport const App = () => {\n  const messagess = useSelector(state => state.messag.messages);\n\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n\n  const deleteMessage = (message) => {\n    dispatch(removeMessage(message));\n  };\n\n  const makeNewMessag = (event) => {\n    event.preventDefault();\n\n    if (value) {\n      dispatch(addMessage({\n        title: value,\n        id: 234234,\n        currentTime: `${new Date().getHours()}:${new Date().getMinutes()}`,\n      }));\n\n      setValue('');\n    }\n  };\n\n  const onChange = ({ target }) => {\n    setValue(target.value);\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat--messages\">\n        {messagess.map(message => (\n          // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n          <div\n            className=\"chat--message\"\n            key={message.id}\n            onClick={() => deleteMessage(message)}\n          >\n            {message.title}\n            <span className=\"chat--time\">\n              {message.currentTime}\n            </span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"chat--newMessage\">\n        <form\n          action=\"\"\n          className=\"chat--form\"\n          onSubmit={makeNewMessag}\n          value={value}\n        >\n          <Input\n            className=\"chat--input\"\n            value={value}\n            onChange={onChange}\n          />\n          <Button\n            className=\"chat--button\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n","import { ADD, REMOVE } from './chatTypes';\n\nexport const addMessage = data => ({\n  type: ADD,\n  data,\n});\n\nexport const removeMessage = data => ({\n  type: REMOVE,\n  data,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redax/store';\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}